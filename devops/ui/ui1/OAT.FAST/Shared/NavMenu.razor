@using BlazorFluentUI.Routing
<Stack Horizontal="false" VerticalFill="true" Style="overflow:hidden;">
    <StackItem Grow="0" VerticalFill="false" Style="padding-left: 30px">
        <div class="top-row">
            <Link Href="/">BlazorFluentUI V@(System.Reflection.Assembly.GetAssembly(typeof(FluentUIComponentBase))?.GetName()?.Version?.ToString() ?? "NULL")</Link>
        </div>
    </StackItem>

    <StackItem VerticalFill="true" Style="overflow-y:auto;">
        <Nav>
            <NavLinkGroup Name="Basic Controls" CollapseByDefault="false">
                @*<BlazorFluentUI.Routing.NavLink Name="Basic" Url="" Id="" IconName="ButtonControl" OnClick=@OnLinkClicked />*@
                <BlazorFluentUI.Routing.NavLink Name="Button" Url="buttonsPage" Id="buttonsPage" IconName="ButtonControl" OnClick=@OnLinkClicked />
            </NavLinkGroup>
        </Nav>
    </StackItem>
</Stack>

@code {

    [Parameter] public EventCallback<BlazorFluentUI.Routing.NavLink> OnLinkClicked { get; set; }

    bool collapseNavMenu = true;

    string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }
}
